/*
 * bmp280.c
 *
 *  Created on: 14. 11. 2020
 *      Author: Stancoj
 */

#include "bmp280_app.h"

bmp280_sensor_data_ BMP280_data = {0};

bool initBMP280_app(void)
{
	int8_t rslt = 0;

	BMP280_data.bmp.delay_ms = LL_mDelay;
	BMP280_data.bmp.dev_id = (BMP280_I2C_ADDR_SEC << 1);
	BMP280_data.bmp.intf = BMP280_I2C_INTF;
	BMP280_data.bmp.read = i2c_bmp280_read;
	BMP280_data.bmp.write = i2c_bmp280_write;

	rslt = bmp280_init(&BMP280_data.bmp);
	if(rslt != BMP280_OK) return false;

	rslt = bmp280_get_config(&BMP280_data.bmp_conf, &BMP280_data.bmp);
	if(rslt != BMP280_OK) return false;

	// Set configuration
	BMP280_data.bmp_conf.filter = BMP280_FILTER_COEFF_2;
	BMP280_data.bmp_conf.os_temp = BMP280_OS_1X;
	BMP280_data.bmp_conf.os_pres = BMP280_OS_4X;
	BMP280_data.bmp_conf.odr = BMP280_ODR_1000_MS;

    rslt = bmp280_set_config(&BMP280_data.bmp_conf, &BMP280_data.bmp);
	if(rslt != BMP280_OK) return false;

	rslt = bmp280_set_power_mode(BMP280_FORCED_MODE, &BMP280_data.bmp);
	if(rslt != BMP280_OK) return false;

	return true;
}


void updateBMP280data(void)
{
	int8_t rslt = bmp280_set_power_mode(BMP280_FORCED_MODE, &BMP280_data.bmp);
	if(rslt != BMP280_OK) return;

	// Get raw data
	bmp280_get_uncomp_data(&BMP280_data.bmp_ucomp_data, &BMP280_data.bmp);
	// Compensate temp raw data
	bmp280_get_comp_temp_32bit(&BMP280_data.bmp_comp_data.bmp_temp.temp32, BMP280_data.bmp_ucomp_data.uncomp_temp, &BMP280_data.bmp);
	// Compensate pres raw data
    bmp280_get_comp_pres_32bit(&BMP280_data.bmp_comp_data.bmp_pres.pres32, BMP280_data.bmp_ucomp_data.uncomp_press, &BMP280_data.bmp);
}


